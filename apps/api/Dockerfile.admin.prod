# Dockerfile para AdminJS (Produção)
# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY turbo.json ./
COPY tsconfig.json ./

# Copy workspace files
COPY libs/ ./libs/
COPY apps/api/ ./apps/api/

# Install all dependencies (including devDependencies for build)
RUN npm ci

# Build the admin application
RUN npm run build:admin --workspace=@fixelo/api

# Remove devDependencies after build
RUN npm prune --production

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Install dumb-init for proper signal handling and curl for health checks
RUN apk add --no-cache dumb-init curl

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S admin -u 1001

# Copy built application and dependencies
COPY --from=builder --chown=admin:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=admin:nodejs /app/apps/api/dist ./apps/api/dist
COPY --from=builder --chown=admin:nodejs /app/apps/api/package.json ./apps/api/package.json
COPY --from=builder --chown=admin:nodejs /app/libs ./libs

# Switch to non-root user
USER admin

# Expose port
EXPOSE 3002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:3002/admin || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "apps/api/dist/admin.js"]
